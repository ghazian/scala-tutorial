[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Ghazian\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Ghazian\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.0 (Amazon.com Inc. Java 11.0.17)
[debug]       Load.loadUnit: plugins took 78.1046ms
[debug]       Load.loadUnit: defsScala took 0.2457ms
[debug] [Loading] Scanning directory C:\Users\Ghazian\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Ghazian\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 13.7824 ms
[debug]           Load.resolveProject(global-plugins) took 38.8124ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Ghazian\.sbt\1.0\plugins, plugins: List(<none>))) took 75.251ms
[debug] [Loading] Done in C:\Users\Ghazian\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 93.8573ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2169ms
[debug]     Load.loadUnit(file:/C:/Users/Ghazian/.sbt/1.0/plugins/, ...) took 180.1069ms
[debug]   Load.apply: load took 300.8949ms
[debug]   Load.apply: resolveProjects took 4.4788ms
[debug]   Load.apply: finalTransforms took 44.1804ms
[debug]   Load.apply: config.delegates took 6.0824ms
[debug]   Load.apply: Def.make(settings)... took 351.2977ms
[debug]   Load.apply: structureIndex took 85.6991ms
[debug]   Load.apply: mkStreams took 1.7949ms
[info] loading global plugins from C:\Users\Ghazian\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 1741.5604ms
[debug]           Load.loadUnit: plugins took 20.2483ms
[debug]           Load.loadUnit: defsScala took 0.004ms
[debug] [Loading] Scanning directory C:\Users\Ghazian\Documents\scala-tut\udemy-scala-tutorial\project
[debug]             Load.loadUnit: mkEval took 8.8317ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Ghazian\Documents\scala-tut\udemy-scala-tutorial\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.1952 ms
[info] loading settings for project udemy-scala-tutorial-build from idea.sbt ...
[debug]               Load.resolveProject(udemy-scala-tutorial-build) took 2.1971ms
[debug]             Load.loadTransitive: finalizeProject(Project(id udemy-scala-tutorial-build, base: C:\Users\Ghazian\Documents\scala-tut\udemy-scala-tutorial\project, plugins: List(<none>))) took 3.7913ms
[debug] [Loading] Done in C:\Users\Ghazian\Documents\scala-tut\udemy-scala-tutorial\project, returning: (udemy-scala-tutorial-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1716.0204ms
[debug]           Load.loadUnit: cleanEvalClasses took 3.8033ms
[debug]         Load.loadUnit(file:/C:/Users/Ghazian/Documents/scala-tut/udemy-scala-tutorial/project/, ...) took 1740.9878ms
[debug]       Load.apply: load took 1742.276ms
[debug]       Load.apply: resolveProjects took 0.1124ms
[debug]       Load.apply: finalTransforms took 8.8942ms
[debug]       Load.apply: config.delegates took 0.3183ms
[debug]       Load.apply: Def.make(settings)... took 74.7963ms
[debug]       Load.apply: structureIndex took 24.452ms
[debug]       Load.apply: mkStreams took 0.0026ms
[info] loading project definition from C:\Users\Ghazian\Documents\scala-tut\udemy-scala-tutorial\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 2801.9179ms
[debug]     Load.loadUnit: defsScala took 0.0027ms
[debug] [Loading] Scanning directory C:\Users\Ghazian\Documents\scala-tut\udemy-scala-tutorial
[debug]       Load.loadUnit: mkEval took 0.2121ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.6438 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 22.7866ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\Ghazian\Documents\scala-tut\udemy-scala-tutorial, plugins: List(<none>))) took 26.045ms
[debug] [Loading] Done in C:\Users\Ghazian\Documents\scala-tut\udemy-scala-tutorial, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 750.8528ms
[debug]     Load.loadUnit: cleanEvalClasses took 5.7352ms
[debug]   Load.loadUnit(file:/C:/Users/Ghazian/Documents/scala-tut/udemy-scala-tutorial/, ...) took 3559.0324ms
[debug] Load.apply: load took 3560.5287ms
[debug] Load.apply: resolveProjects took 0.0765ms
[debug] Load.apply: finalTransforms took 24.3327ms
[debug] Load.apply: config.delegates took 0.2746ms
[debug] Load.apply: Def.make(settings)... took 87.3578ms
[debug] Load.apply: structureIndex took 29.6049ms
[debug] Load.apply: mkStreams took 0.0023ms
[info] set current project to udemy-scala-tutorial (in build file:/C:/Users/Ghazian/Documents/scala-tut/udemy-scala-tutorial/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 59254 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 59254, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to udemy-scala-tutorial (in build file:/C:/Users/Ghazian/Documents/scala-tut/udemy-scala-tutorial/)
[debug] > Exec(idea-shell, None, None)
